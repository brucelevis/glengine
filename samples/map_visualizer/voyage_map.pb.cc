// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: voyage_map.proto

#include "voyage_map.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_voyage_5fmap_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Point3d;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Adjacency;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BoundaryAttribute;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Junction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Maneuver;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Map_JunctionsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Map_OverlapsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Map_PathsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Overlap;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PathTag;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PathWidth;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Polygon3d;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Polyline;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RoadExtent;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_SpeedLimit;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PathBoundary;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_voyage_5fmap_2eproto ::google::protobuf::internal::SCCInfo<9> scc_info_Path;
}  // namespace protobuf_voyage_5fmap_2eproto
class Point3dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Point3d>
      _instance;
} _Point3d_default_instance_;
class Polygon3dDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Polygon3d>
      _instance;
} _Polygon3d_default_instance_;
class PolylineDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Polyline>
      _instance;
} _Polyline_default_instance_;
class OverlapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Overlap>
      _instance;
} _Overlap_default_instance_;
class AdjacencyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Adjacency>
      _instance;
} _Adjacency_default_instance_;
class BoundaryAttributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BoundaryAttribute>
      _instance;
} _BoundaryAttribute_default_instance_;
class PathTagDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PathTag>
      _instance;
} _PathTag_default_instance_;
class SpeedLimitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SpeedLimit>
      _instance;
} _SpeedLimit_default_instance_;
class ManeuverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Maneuver>
      _instance;
} _Maneuver_default_instance_;
class PathBoundaryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PathBoundary>
      _instance;
} _PathBoundary_default_instance_;
class RoadExtentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RoadExtent>
      _instance;
} _RoadExtent_default_instance_;
class PathWidthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PathWidth>
      _instance;
} _PathWidth_default_instance_;
class PathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Path>
      _instance;
} _Path_default_instance_;
class JunctionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Junction>
      _instance;
} _Junction_default_instance_;
class Map_PathsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Map_PathsEntry_DoNotUse>
      _instance;
} _Map_PathsEntry_DoNotUse_default_instance_;
class Map_OverlapsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Map_OverlapsEntry_DoNotUse>
      _instance;
} _Map_OverlapsEntry_DoNotUse_default_instance_;
class Map_JunctionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Map_JunctionsEntry_DoNotUse>
      _instance;
} _Map_JunctionsEntry_DoNotUse_default_instance_;
class MapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Map>
      _instance;
} _Map_default_instance_;
namespace protobuf_voyage_5fmap_2eproto {
static void InitDefaultsPoint3d() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Point3d_default_instance_;
    new (ptr) ::Point3d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Point3d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Point3d =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoint3d}, {}};

static void InitDefaultsPolygon3d() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Polygon3d_default_instance_;
    new (ptr) ::Polygon3d();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Polygon3d::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Polygon3d =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPolygon3d}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Point3d.base,}};

static void InitDefaultsPolyline() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Polyline_default_instance_;
    new (ptr) ::Polyline();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Polyline::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Polyline =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPolyline}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Point3d.base,}};

static void InitDefaultsOverlap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Overlap_default_instance_;
    new (ptr) ::Overlap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Overlap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Overlap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOverlap}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Polygon3d.base,}};

static void InitDefaultsAdjacency() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Adjacency_default_instance_;
    new (ptr) ::Adjacency();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Adjacency::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Adjacency =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAdjacency}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Point3d.base,}};

static void InitDefaultsBoundaryAttribute() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_BoundaryAttribute_default_instance_;
    new (ptr) ::BoundaryAttribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::BoundaryAttribute::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BoundaryAttribute =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBoundaryAttribute}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Point3d.base,}};

static void InitDefaultsPathTag() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PathTag_default_instance_;
    new (ptr) ::PathTag();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PathTag::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PathTag =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPathTag}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Point3d.base,}};

static void InitDefaultsSpeedLimit() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SpeedLimit_default_instance_;
    new (ptr) ::SpeedLimit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SpeedLimit::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SpeedLimit =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSpeedLimit}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Point3d.base,}};

static void InitDefaultsManeuver() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Maneuver_default_instance_;
    new (ptr) ::Maneuver();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Maneuver::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Maneuver =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsManeuver}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Point3d.base,}};

static void InitDefaultsPathBoundary() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PathBoundary_default_instance_;
    new (ptr) ::PathBoundary();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PathBoundary::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PathBoundary =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPathBoundary}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Polyline.base,
      &protobuf_voyage_5fmap_2eproto::scc_info_BoundaryAttribute.base,}};

static void InitDefaultsRoadExtent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_RoadExtent_default_instance_;
    new (ptr) ::RoadExtent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::RoadExtent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RoadExtent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRoadExtent}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Polyline.base,}};

static void InitDefaultsPathWidth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_PathWidth_default_instance_;
    new (ptr) ::PathWidth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PathWidth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PathWidth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPathWidth}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Point3d.base,}};

static void InitDefaultsPath() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Path_default_instance_;
    new (ptr) ::Path();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Path::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<9> scc_info_Path =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 9, InitDefaultsPath}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Polygon3d.base,
      &protobuf_voyage_5fmap_2eproto::scc_info_Polyline.base,
      &protobuf_voyage_5fmap_2eproto::scc_info_PathTag.base,
      &protobuf_voyage_5fmap_2eproto::scc_info_SpeedLimit.base,
      &protobuf_voyage_5fmap_2eproto::scc_info_PathBoundary.base,
      &protobuf_voyage_5fmap_2eproto::scc_info_Adjacency.base,
      &protobuf_voyage_5fmap_2eproto::scc_info_RoadExtent.base,
      &protobuf_voyage_5fmap_2eproto::scc_info_PathWidth.base,
      &protobuf_voyage_5fmap_2eproto::scc_info_Maneuver.base,}};

static void InitDefaultsJunction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Junction_default_instance_;
    new (ptr) ::Junction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Junction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Junction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJunction}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Polygon3d.base,}};

static void InitDefaultsMap_PathsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Map_PathsEntry_DoNotUse_default_instance_;
    new (ptr) ::Map_PathsEntry_DoNotUse();
  }
  ::Map_PathsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Map_PathsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMap_PathsEntry_DoNotUse}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Path.base,}};

static void InitDefaultsMap_OverlapsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Map_OverlapsEntry_DoNotUse_default_instance_;
    new (ptr) ::Map_OverlapsEntry_DoNotUse();
  }
  ::Map_OverlapsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Map_OverlapsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMap_OverlapsEntry_DoNotUse}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Overlap.base,}};

static void InitDefaultsMap_JunctionsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Map_JunctionsEntry_DoNotUse_default_instance_;
    new (ptr) ::Map_JunctionsEntry_DoNotUse();
  }
  ::Map_JunctionsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Map_JunctionsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMap_JunctionsEntry_DoNotUse}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Junction.base,}};

static void InitDefaultsMap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Map_default_instance_;
    new (ptr) ::Map();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Map::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Map =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsMap}, {
      &protobuf_voyage_5fmap_2eproto::scc_info_Map_PathsEntry_DoNotUse.base,
      &protobuf_voyage_5fmap_2eproto::scc_info_Map_OverlapsEntry_DoNotUse.base,
      &protobuf_voyage_5fmap_2eproto::scc_info_Map_JunctionsEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Point3d.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Polygon3d.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Polyline.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Overlap.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Adjacency.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BoundaryAttribute.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PathTag.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SpeedLimit.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Maneuver.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PathBoundary.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RoadExtent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PathWidth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Path.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Junction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Map_PathsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Map_OverlapsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Map_JunctionsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Map.base);
}

::google::protobuf::Metadata file_level_metadata[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3d, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3d, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Point3d, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Polygon3d, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Polygon3d, points_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Polyline, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Polyline, waypoints_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Overlap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Overlap, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Overlap, path_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Overlap, area_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Adjacency, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Adjacency, left_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Adjacency, right_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Adjacency, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Adjacency, end_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BoundaryAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BoundaryAttribute, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BoundaryAttribute, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::BoundaryAttribute, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathTag, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathTag, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathTag, tag_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathTag, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SpeedLimit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SpeedLimit, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SpeedLimit, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::SpeedLimit, speed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Maneuver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Maneuver, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Maneuver, end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Maneuver, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathBoundary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathBoundary, line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathBoundary, attributes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadExtent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadExtent, left_extent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::RoadExtent, right_extent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathWidth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathWidth, reference_point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathWidth, left_width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PathWidth, right_width_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, reference_line_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, next_paths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, previous_paths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, speed_limits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, left_boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, right_boundary_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, adjacencies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, road_extent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, path_widths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Path, maneuvers_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Junction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Junction, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Junction, path_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Junction, area_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_PathsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_PathsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_PathsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_PathsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_OverlapsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_OverlapsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_OverlapsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_OverlapsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_JunctionsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_JunctionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_JunctionsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map_JunctionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map, paths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map, overlaps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Map, junctions_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Point3d)},
  { 8, -1, sizeof(::Polygon3d)},
  { 14, -1, sizeof(::Polyline)},
  { 20, -1, sizeof(::Overlap)},
  { 28, -1, sizeof(::Adjacency)},
  { 37, -1, sizeof(::BoundaryAttribute)},
  { 45, -1, sizeof(::PathTag)},
  { 54, -1, sizeof(::SpeedLimit)},
  { 62, -1, sizeof(::Maneuver)},
  { 70, -1, sizeof(::PathBoundary)},
  { 77, -1, sizeof(::RoadExtent)},
  { 84, -1, sizeof(::PathWidth)},
  { 92, -1, sizeof(::Path)},
  { 111, -1, sizeof(::Junction)},
  { 119, 126, sizeof(::Map_PathsEntry_DoNotUse)},
  { 128, 135, sizeof(::Map_OverlapsEntry_DoNotUse)},
  { 137, 144, sizeof(::Map_JunctionsEntry_DoNotUse)},
  { 146, -1, sizeof(::Map)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Point3d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Polygon3d_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Polyline_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Overlap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Adjacency_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_BoundaryAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PathTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_SpeedLimit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Maneuver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PathBoundary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_RoadExtent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PathWidth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Path_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Junction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Map_PathsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Map_OverlapsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Map_JunctionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Map_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "voyage_map.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020voyage_map.proto\"*\n\007Point3d\022\t\n\001x\030\001 \001(\001"
      "\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\"%\n\tPolygon3d\022\030\n\006p"
      "oints\030\001 \003(\0132\010.Point3d\"\'\n\010Polyline\022\033\n\tway"
      "points\030\001 \003(\0132\010.Point3d\"A\n\007Overlap\022\n\n\002id\030"
      "\001 \001(\005\022\020\n\010path_ids\030\002 \003(\005\022\030\n\004area\030\003 \001(\0132\n."
      "Polygon3d\"b\n\tAdjacency\022\021\n\tleft_path\030\001 \001("
      "\005\022\022\n\nright_path\030\002 \001(\005\022\027\n\005start\030\003 \001(\0132\010.P"
      "oint3d\022\025\n\003end\030\004 \001(\0132\010.Point3d\"`\n\021Boundar"
      "yAttribute\022\027\n\005start\030\001 \001(\0132\010.Point3d\022\025\n\003e"
      "nd\030\002 \001(\0132\010.Point3d\022\033\n\004type\030\003 \001(\0162\r.Bound"
      "aryType\"a\n\007PathTag\022\027\n\005start\030\001 \001(\0132\010.Poin"
      "t3d\022\025\n\003end\030\002 \001(\0132\010.Point3d\022\032\n\010tag_type\030\003"
      " \001(\0162\010.TagType\022\n\n\002id\030\004 \001(\005\"K\n\nSpeedLimit"
      "\022\027\n\005start\030\001 \001(\0132\010.Point3d\022\025\n\003end\030\002 \001(\0132\010"
      ".Point3d\022\r\n\005speed\030\003 \001(\001\"W\n\010Maneuver\022\027\n\005s"
      "tart\030\001 \001(\0132\010.Point3d\022\025\n\003end\030\002 \001(\0132\010.Poin"
      "t3d\022\033\n\004type\030\003 \001(\0162\r.ManeuverType\"O\n\014Path"
      "Boundary\022\027\n\004line\030\001 \001(\0132\t.Polyline\022&\n\natt"
      "ributes\030\002 \003(\0132\022.BoundaryAttribute\"M\n\nRoa"
      "dExtent\022\036\n\013left_extent\030\001 \003(\0132\t.Polyline\022"
      "\037\n\014right_extent\030\002 \003(\0132\t.Polyline\"W\n\tPath"
      "Width\022!\n\017reference_point\030\001 \001(\0132\010.Point3d"
      "\022\022\n\nleft_width\030\002 \001(\001\022\023\n\013right_width\030\003 \001("
      "\001\"\236\003\n\004Path\022\n\n\002id\030\001 \001(\005\022\027\n\004type\030\002 \001(\0162\t.P"
      "athType\022\030\n\004area\030\003 \001(\0132\n.Polygon3d\022!\n\016ref"
      "erence_line\030\004 \001(\0132\t.Polyline\022\022\n\nnext_pat"
      "hs\030\005 \003(\005\022\026\n\016previous_paths\030\006 \003(\005\022\026\n\004tags"
      "\030\007 \003(\0132\010.PathTag\022!\n\014speed_limits\030\010 \003(\0132\013"
      ".SpeedLimit\022$\n\rleft_boundary\030\t \001(\0132\r.Pat"
      "hBoundary\022%\n\016right_boundary\030\n \001(\0132\r.Path"
      "Boundary\022\037\n\013adjacencies\030\013 \003(\0132\n.Adjacenc"
      "y\022 \n\013road_extent\030\014 \001(\0132\013.RoadExtent\022\037\n\013p"
      "ath_widths\030\r \003(\0132\n.PathWidth\022\034\n\tmaneuver"
      "s\030\016 \003(\0132\t.Maneuver\"B\n\010Junction\022\n\n\002id\030\001 \001"
      "(\005\022\020\n\010path_ids\030\002 \003(\005\022\030\n\004area\030\003 \001(\0132\n.Pol"
      "ygon3d\"\240\002\n\003Map\022\036\n\005paths\030\001 \003(\0132\017.Map.Path"
      "sEntry\022$\n\010overlaps\030\002 \003(\0132\022.Map.OverlapsE"
      "ntry\022&\n\tjunctions\030\003 \003(\0132\023.Map.JunctionsE"
      "ntry\0323\n\nPathsEntry\022\013\n\003key\030\001 \001(\005\022\024\n\005value"
      "\030\002 \001(\0132\005.Path:\0028\001\0329\n\rOverlapsEntry\022\013\n\003ke"
      "y\030\001 \001(\005\022\027\n\005value\030\002 \001(\0132\010.Overlap:\0028\001\032;\n\016"
      "JunctionsEntry\022\013\n\003key\030\001 \001(\005\022\030\n\005value\030\002 \001"
      "(\0132\t.Junction:\0028\001*4\n\010PathType\022\014\n\010INTERNA"
      "L\020\000\022\014\n\010EXTERNAL\020\001\022\014\n\010COMPUTED\020\002*\212\001\n\007TagT"
      "ype\022\027\n\023PEDESTRIAN_CROSSING\020\000\022\024\n\020BICYCLE_"
      "CROSSING\020\001\022\026\n\022GOLF_CART_CROSSING\020\002\022\014\n\010ST"
      "OPLINE\020\003\022\014\n\010WAITLINE\020\004\022\r\n\tWATCHLINE\020\005\022\r\n"
      "\tYIELDLINE\020\006*\347\001\n\014ManeuverType\022\013\n\007UNKNOWN"
      "\020\000\022\014\n\010STRAIGHT\020\001\022\r\n\tLEFT_TURN\020\002\022\016\n\nRIGHT"
      "_TURN\020\003\022\017\n\013LEFT_BRANCH\020\004\022\020\n\014RIGHT_BRANCH"
      "\020\005\022\016\n\nLEFT_MERGE\020\006\022\017\n\013RIGHT_MERGE\020\007\022\017\n\013P"
      "ARKING_LOT\020\010\022\n\n\006U_TURN\020\t\022\021\n\rBIDIRECTIONA"
      "L\020\n\022\024\n\020ROUNDABOUT_ENTRY\020\013\022\023\n\017ROUNDABOUT_"
      "EXIT\020\014*/\n\014BoundaryType\022\016\n\nSOLID_LINE\020\000\022\017"
      "\n\013DASHED_LINE\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2183);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "voyage_map.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_voyage_5fmap_2eproto
const ::google::protobuf::EnumDescriptor* PathType_descriptor() {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voyage_5fmap_2eproto::file_level_enum_descriptors[0];
}
bool PathType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* TagType_descriptor() {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voyage_5fmap_2eproto::file_level_enum_descriptors[1];
}
bool TagType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ManeuverType_descriptor() {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voyage_5fmap_2eproto::file_level_enum_descriptors[2];
}
bool ManeuverType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BoundaryType_descriptor() {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_voyage_5fmap_2eproto::file_level_enum_descriptors[3];
}
bool BoundaryType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Point3d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Point3d::kXFieldNumber;
const int Point3d::kYFieldNumber;
const int Point3d::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Point3d::Point3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_Point3d.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Point3d)
}
Point3d::Point3d(const Point3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:Point3d)
}

void Point3d::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
}

Point3d::~Point3d() {
  // @@protoc_insertion_point(destructor:Point3d)
  SharedDtor();
}

void Point3d::SharedDtor() {
}

void Point3d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Point3d::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Point3d& Point3d::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_Point3d.base);
  return *internal_default_instance();
}


void Point3d::Clear() {
// @@protoc_insertion_point(message_clear_start:Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool Point3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Point3d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Point3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Point3d)
  return false;
#undef DO_
}

void Point3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Point3d)
}

::google::protobuf::uint8* Point3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Point3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Point3d)
  return target;
}

size_t Point3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Point3d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Point3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Point3d)
  GOOGLE_DCHECK_NE(&from, this);
  const Point3d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Point3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Point3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Point3d)
    MergeFrom(*source);
  }
}

void Point3d::MergeFrom(const Point3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Point3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void Point3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Point3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Point3d::CopyFrom(const Point3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Point3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Point3d::IsInitialized() const {
  return true;
}

void Point3d::Swap(Point3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Point3d::InternalSwap(Point3d* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Point3d::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Polygon3d::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Polygon3d::kPointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Polygon3d::Polygon3d()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_Polygon3d.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Polygon3d)
}
Polygon3d::Polygon3d(const Polygon3d& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      points_(from.points_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Polygon3d)
}

void Polygon3d::SharedCtor() {
}

Polygon3d::~Polygon3d() {
  // @@protoc_insertion_point(destructor:Polygon3d)
  SharedDtor();
}

void Polygon3d::SharedDtor() {
}

void Polygon3d::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Polygon3d::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Polygon3d& Polygon3d::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_Polygon3d.base);
  return *internal_default_instance();
}


void Polygon3d::Clear() {
// @@protoc_insertion_point(message_clear_start:Polygon3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  points_.Clear();
  _internal_metadata_.Clear();
}

bool Polygon3d::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Polygon3d)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Point3d points = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_points()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Polygon3d)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Polygon3d)
  return false;
#undef DO_
}

void Polygon3d::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Polygon3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point3d points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->points(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Polygon3d)
}

::google::protobuf::uint8* Polygon3d::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Polygon3d)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point3d points = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->points_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->points(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Polygon3d)
  return target;
}

size_t Polygon3d::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Polygon3d)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Point3d points = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->points_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->points(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Polygon3d::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Polygon3d)
  GOOGLE_DCHECK_NE(&from, this);
  const Polygon3d* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Polygon3d>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Polygon3d)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Polygon3d)
    MergeFrom(*source);
  }
}

void Polygon3d::MergeFrom(const Polygon3d& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Polygon3d)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  points_.MergeFrom(from.points_);
}

void Polygon3d::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Polygon3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Polygon3d::CopyFrom(const Polygon3d& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Polygon3d)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Polygon3d::IsInitialized() const {
  return true;
}

void Polygon3d::Swap(Polygon3d* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Polygon3d::InternalSwap(Polygon3d* other) {
  using std::swap;
  CastToBase(&points_)->InternalSwap(CastToBase(&other->points_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Polygon3d::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Polyline::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Polyline::kWaypointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Polyline::Polyline()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_Polyline.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Polyline)
}
Polyline::Polyline(const Polyline& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      waypoints_(from.waypoints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Polyline)
}

void Polyline::SharedCtor() {
}

Polyline::~Polyline() {
  // @@protoc_insertion_point(destructor:Polyline)
  SharedDtor();
}

void Polyline::SharedDtor() {
}

void Polyline::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Polyline::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Polyline& Polyline::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_Polyline.base);
  return *internal_default_instance();
}


void Polyline::Clear() {
// @@protoc_insertion_point(message_clear_start:Polyline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  waypoints_.Clear();
  _internal_metadata_.Clear();
}

bool Polyline::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Polyline)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Point3d waypoints = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_waypoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Polyline)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Polyline)
  return false;
#undef DO_
}

void Polyline::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Polyline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point3d waypoints = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->waypoints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->waypoints(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Polyline)
}

::google::protobuf::uint8* Polyline::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Polyline)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Point3d waypoints = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->waypoints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->waypoints(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Polyline)
  return target;
}

size_t Polyline::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Polyline)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Point3d waypoints = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->waypoints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->waypoints(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Polyline::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Polyline)
  GOOGLE_DCHECK_NE(&from, this);
  const Polyline* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Polyline>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Polyline)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Polyline)
    MergeFrom(*source);
  }
}

void Polyline::MergeFrom(const Polyline& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Polyline)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  waypoints_.MergeFrom(from.waypoints_);
}

void Polyline::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Polyline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Polyline::CopyFrom(const Polyline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Polyline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Polyline::IsInitialized() const {
  return true;
}

void Polyline::Swap(Polyline* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Polyline::InternalSwap(Polyline* other) {
  using std::swap;
  CastToBase(&waypoints_)->InternalSwap(CastToBase(&other->waypoints_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Polyline::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Overlap::InitAsDefaultInstance() {
  ::_Overlap_default_instance_._instance.get_mutable()->area_ = const_cast< ::Polygon3d*>(
      ::Polygon3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Overlap::kIdFieldNumber;
const int Overlap::kPathIdsFieldNumber;
const int Overlap::kAreaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Overlap::Overlap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_Overlap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Overlap)
}
Overlap::Overlap(const Overlap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_ids_(from.path_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_area()) {
    area_ = new ::Polygon3d(*from.area_);
  } else {
    area_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:Overlap)
}

void Overlap::SharedCtor() {
  ::memset(&area_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&area_)) + sizeof(id_));
}

Overlap::~Overlap() {
  // @@protoc_insertion_point(destructor:Overlap)
  SharedDtor();
}

void Overlap::SharedDtor() {
  if (this != internal_default_instance()) delete area_;
}

void Overlap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Overlap::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Overlap& Overlap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_Overlap.base);
  return *internal_default_instance();
}


void Overlap::Clear() {
// @@protoc_insertion_point(message_clear_start:Overlap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_ids_.Clear();
  if (GetArenaNoVirtual() == NULL && area_ != NULL) {
    delete area_;
  }
  area_ = NULL;
  id_ = 0;
  _internal_metadata_.Clear();
}

bool Overlap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Overlap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 path_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_path_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_path_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Polygon3d area = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Overlap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Overlap)
  return false;
#undef DO_
}

void Overlap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Overlap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated int32 path_ids = 2;
  if (this->path_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _path_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->path_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->path_ids(i), output);
  }

  // .Polygon3d area = 3;
  if (this->has_area()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_area(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Overlap)
}

::google::protobuf::uint8* Overlap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Overlap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated int32 path_ids = 2;
  if (this->path_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _path_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->path_ids_, target);
  }

  // .Polygon3d area = 3;
  if (this->has_area()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_area(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Overlap)
  return target;
}

size_t Overlap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Overlap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 path_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->path_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _path_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .Polygon3d area = 3;
  if (this->has_area()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *area_);
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Overlap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Overlap)
  GOOGLE_DCHECK_NE(&from, this);
  const Overlap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Overlap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Overlap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Overlap)
    MergeFrom(*source);
  }
}

void Overlap::MergeFrom(const Overlap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Overlap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_ids_.MergeFrom(from.path_ids_);
  if (from.has_area()) {
    mutable_area()->::Polygon3d::MergeFrom(from.area());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Overlap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Overlap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Overlap::CopyFrom(const Overlap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Overlap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Overlap::IsInitialized() const {
  return true;
}

void Overlap::Swap(Overlap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Overlap::InternalSwap(Overlap* other) {
  using std::swap;
  path_ids_.InternalSwap(&other->path_ids_);
  swap(area_, other->area_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Overlap::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Adjacency::InitAsDefaultInstance() {
  ::_Adjacency_default_instance_._instance.get_mutable()->start_ = const_cast< ::Point3d*>(
      ::Point3d::internal_default_instance());
  ::_Adjacency_default_instance_._instance.get_mutable()->end_ = const_cast< ::Point3d*>(
      ::Point3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Adjacency::kLeftPathFieldNumber;
const int Adjacency::kRightPathFieldNumber;
const int Adjacency::kStartFieldNumber;
const int Adjacency::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Adjacency::Adjacency()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_Adjacency.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Adjacency)
}
Adjacency::Adjacency(const Adjacency& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start()) {
    start_ = new ::Point3d(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_end()) {
    end_ = new ::Point3d(*from.end_);
  } else {
    end_ = NULL;
  }
  ::memcpy(&left_path_, &from.left_path_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_path_) -
    reinterpret_cast<char*>(&left_path_)) + sizeof(right_path_));
  // @@protoc_insertion_point(copy_constructor:Adjacency)
}

void Adjacency::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_path_) -
      reinterpret_cast<char*>(&start_)) + sizeof(right_path_));
}

Adjacency::~Adjacency() {
  // @@protoc_insertion_point(destructor:Adjacency)
  SharedDtor();
}

void Adjacency::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
}

void Adjacency::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Adjacency::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Adjacency& Adjacency::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_Adjacency.base);
  return *internal_default_instance();
}


void Adjacency::Clear() {
// @@protoc_insertion_point(message_clear_start:Adjacency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_ != NULL) {
    delete end_;
  }
  end_ = NULL;
  ::memset(&left_path_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_path_) -
      reinterpret_cast<char*>(&left_path_)) + sizeof(right_path_));
  _internal_metadata_.Clear();
}

bool Adjacency::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Adjacency)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 left_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_path_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 right_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_path_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Point3d start = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Point3d end = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Adjacency)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Adjacency)
  return false;
#undef DO_
}

void Adjacency::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Adjacency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 left_path = 1;
  if (this->left_path() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->left_path(), output);
  }

  // int32 right_path = 2;
  if (this->right_path() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->right_path(), output);
  }

  // .Point3d start = 3;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_start(), output);
  }

  // .Point3d end = 4;
  if (this->has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_end(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Adjacency)
}

::google::protobuf::uint8* Adjacency::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Adjacency)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 left_path = 1;
  if (this->left_path() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->left_path(), target);
  }

  // int32 right_path = 2;
  if (this->right_path() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->right_path(), target);
  }

  // .Point3d start = 3;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_start(), deterministic, target);
  }

  // .Point3d end = 4;
  if (this->has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_end(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Adjacency)
  return target;
}

size_t Adjacency::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Adjacency)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Point3d start = 3;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_);
  }

  // .Point3d end = 4;
  if (this->has_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_);
  }

  // int32 left_path = 1;
  if (this->left_path() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->left_path());
  }

  // int32 right_path = 2;
  if (this->right_path() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->right_path());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Adjacency::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Adjacency)
  GOOGLE_DCHECK_NE(&from, this);
  const Adjacency* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Adjacency>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Adjacency)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Adjacency)
    MergeFrom(*source);
  }
}

void Adjacency::MergeFrom(const Adjacency& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Adjacency)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start()) {
    mutable_start()->::Point3d::MergeFrom(from.start());
  }
  if (from.has_end()) {
    mutable_end()->::Point3d::MergeFrom(from.end());
  }
  if (from.left_path() != 0) {
    set_left_path(from.left_path());
  }
  if (from.right_path() != 0) {
    set_right_path(from.right_path());
  }
}

void Adjacency::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Adjacency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Adjacency::CopyFrom(const Adjacency& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Adjacency)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Adjacency::IsInitialized() const {
  return true;
}

void Adjacency::Swap(Adjacency* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Adjacency::InternalSwap(Adjacency* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(left_path_, other->left_path_);
  swap(right_path_, other->right_path_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Adjacency::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BoundaryAttribute::InitAsDefaultInstance() {
  ::_BoundaryAttribute_default_instance_._instance.get_mutable()->start_ = const_cast< ::Point3d*>(
      ::Point3d::internal_default_instance());
  ::_BoundaryAttribute_default_instance_._instance.get_mutable()->end_ = const_cast< ::Point3d*>(
      ::Point3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BoundaryAttribute::kStartFieldNumber;
const int BoundaryAttribute::kEndFieldNumber;
const int BoundaryAttribute::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BoundaryAttribute::BoundaryAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_BoundaryAttribute.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:BoundaryAttribute)
}
BoundaryAttribute::BoundaryAttribute(const BoundaryAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start()) {
    start_ = new ::Point3d(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_end()) {
    end_ = new ::Point3d(*from.end_);
  } else {
    end_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:BoundaryAttribute)
}

void BoundaryAttribute::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&start_)) + sizeof(type_));
}

BoundaryAttribute::~BoundaryAttribute() {
  // @@protoc_insertion_point(destructor:BoundaryAttribute)
  SharedDtor();
}

void BoundaryAttribute::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
}

void BoundaryAttribute::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BoundaryAttribute::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BoundaryAttribute& BoundaryAttribute::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_BoundaryAttribute.base);
  return *internal_default_instance();
}


void BoundaryAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:BoundaryAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_ != NULL) {
    delete end_;
  }
  end_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool BoundaryAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:BoundaryAttribute)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Point3d start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Point3d end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .BoundaryType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::BoundaryType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:BoundaryAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:BoundaryAttribute)
  return false;
#undef DO_
}

void BoundaryAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:BoundaryAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Point3d start = 1;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_start(), output);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_end(), output);
  }

  // .BoundaryType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:BoundaryAttribute)
}

::google::protobuf::uint8* BoundaryAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:BoundaryAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Point3d start = 1;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_start(), deterministic, target);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_end(), deterministic, target);
  }

  // .BoundaryType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BoundaryAttribute)
  return target;
}

size_t BoundaryAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BoundaryAttribute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Point3d start = 1;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_);
  }

  // .BoundaryType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BoundaryAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:BoundaryAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const BoundaryAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BoundaryAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:BoundaryAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:BoundaryAttribute)
    MergeFrom(*source);
  }
}

void BoundaryAttribute::MergeFrom(const BoundaryAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:BoundaryAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start()) {
    mutable_start()->::Point3d::MergeFrom(from.start());
  }
  if (from.has_end()) {
    mutable_end()->::Point3d::MergeFrom(from.end());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void BoundaryAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:BoundaryAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BoundaryAttribute::CopyFrom(const BoundaryAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BoundaryAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BoundaryAttribute::IsInitialized() const {
  return true;
}

void BoundaryAttribute::Swap(BoundaryAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BoundaryAttribute::InternalSwap(BoundaryAttribute* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BoundaryAttribute::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PathTag::InitAsDefaultInstance() {
  ::_PathTag_default_instance_._instance.get_mutable()->start_ = const_cast< ::Point3d*>(
      ::Point3d::internal_default_instance());
  ::_PathTag_default_instance_._instance.get_mutable()->end_ = const_cast< ::Point3d*>(
      ::Point3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PathTag::kStartFieldNumber;
const int PathTag::kEndFieldNumber;
const int PathTag::kTagTypeFieldNumber;
const int PathTag::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PathTag::PathTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_PathTag.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PathTag)
}
PathTag::PathTag(const PathTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start()) {
    start_ = new ::Point3d(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_end()) {
    end_ = new ::Point3d(*from.end_);
  } else {
    end_ = NULL;
  }
  ::memcpy(&tag_type_, &from.tag_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&tag_type_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:PathTag)
}

void PathTag::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&start_)) + sizeof(id_));
}

PathTag::~PathTag() {
  // @@protoc_insertion_point(destructor:PathTag)
  SharedDtor();
}

void PathTag::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
}

void PathTag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PathTag::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PathTag& PathTag::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_PathTag.base);
  return *internal_default_instance();
}


void PathTag::Clear() {
// @@protoc_insertion_point(message_clear_start:PathTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_ != NULL) {
    delete end_;
  }
  end_ = NULL;
  ::memset(&tag_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&tag_type_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool PathTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PathTag)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Point3d start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Point3d end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TagType tag_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_tag_type(static_cast< ::TagType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PathTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PathTag)
  return false;
#undef DO_
}

void PathTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PathTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Point3d start = 1;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_start(), output);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_end(), output);
  }

  // .TagType tag_type = 3;
  if (this->tag_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->tag_type(), output);
  }

  // int32 id = 4;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PathTag)
}

::google::protobuf::uint8* PathTag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PathTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Point3d start = 1;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_start(), deterministic, target);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_end(), deterministic, target);
  }

  // .TagType tag_type = 3;
  if (this->tag_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->tag_type(), target);
  }

  // int32 id = 4;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PathTag)
  return target;
}

size_t PathTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PathTag)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Point3d start = 1;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_);
  }

  // .TagType tag_type = 3;
  if (this->tag_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->tag_type());
  }

  // int32 id = 4;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PathTag)
  GOOGLE_DCHECK_NE(&from, this);
  const PathTag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PathTag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PathTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PathTag)
    MergeFrom(*source);
  }
}

void PathTag::MergeFrom(const PathTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PathTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start()) {
    mutable_start()->::Point3d::MergeFrom(from.start());
  }
  if (from.has_end()) {
    mutable_end()->::Point3d::MergeFrom(from.end());
  }
  if (from.tag_type() != 0) {
    set_tag_type(from.tag_type());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void PathTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PathTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathTag::CopyFrom(const PathTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PathTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathTag::IsInitialized() const {
  return true;
}

void PathTag::Swap(PathTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PathTag::InternalSwap(PathTag* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(tag_type_, other->tag_type_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PathTag::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SpeedLimit::InitAsDefaultInstance() {
  ::_SpeedLimit_default_instance_._instance.get_mutable()->start_ = const_cast< ::Point3d*>(
      ::Point3d::internal_default_instance());
  ::_SpeedLimit_default_instance_._instance.get_mutable()->end_ = const_cast< ::Point3d*>(
      ::Point3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SpeedLimit::kStartFieldNumber;
const int SpeedLimit::kEndFieldNumber;
const int SpeedLimit::kSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SpeedLimit::SpeedLimit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_SpeedLimit.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:SpeedLimit)
}
SpeedLimit::SpeedLimit(const SpeedLimit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start()) {
    start_ = new ::Point3d(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_end()) {
    end_ = new ::Point3d(*from.end_);
  } else {
    end_ = NULL;
  }
  speed_ = from.speed_;
  // @@protoc_insertion_point(copy_constructor:SpeedLimit)
}

void SpeedLimit::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&start_)) + sizeof(speed_));
}

SpeedLimit::~SpeedLimit() {
  // @@protoc_insertion_point(destructor:SpeedLimit)
  SharedDtor();
}

void SpeedLimit::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
}

void SpeedLimit::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SpeedLimit::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SpeedLimit& SpeedLimit::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_SpeedLimit.base);
  return *internal_default_instance();
}


void SpeedLimit::Clear() {
// @@protoc_insertion_point(message_clear_start:SpeedLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_ != NULL) {
    delete end_;
  }
  end_ = NULL;
  speed_ = 0;
  _internal_metadata_.Clear();
}

bool SpeedLimit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SpeedLimit)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Point3d start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Point3d end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double speed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SpeedLimit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SpeedLimit)
  return false;
#undef DO_
}

void SpeedLimit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SpeedLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Point3d start = 1;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_start(), output);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_end(), output);
  }

  // double speed = 3;
  if (this->speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->speed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:SpeedLimit)
}

::google::protobuf::uint8* SpeedLimit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:SpeedLimit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Point3d start = 1;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_start(), deterministic, target);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_end(), deterministic, target);
  }

  // double speed = 3;
  if (this->speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->speed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SpeedLimit)
  return target;
}

size_t SpeedLimit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SpeedLimit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Point3d start = 1;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_);
  }

  // double speed = 3;
  if (this->speed() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SpeedLimit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SpeedLimit)
  GOOGLE_DCHECK_NE(&from, this);
  const SpeedLimit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SpeedLimit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SpeedLimit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SpeedLimit)
    MergeFrom(*source);
  }
}

void SpeedLimit::MergeFrom(const SpeedLimit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SpeedLimit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start()) {
    mutable_start()->::Point3d::MergeFrom(from.start());
  }
  if (from.has_end()) {
    mutable_end()->::Point3d::MergeFrom(from.end());
  }
  if (from.speed() != 0) {
    set_speed(from.speed());
  }
}

void SpeedLimit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SpeedLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SpeedLimit::CopyFrom(const SpeedLimit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SpeedLimit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SpeedLimit::IsInitialized() const {
  return true;
}

void SpeedLimit::Swap(SpeedLimit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SpeedLimit::InternalSwap(SpeedLimit* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(speed_, other->speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SpeedLimit::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Maneuver::InitAsDefaultInstance() {
  ::_Maneuver_default_instance_._instance.get_mutable()->start_ = const_cast< ::Point3d*>(
      ::Point3d::internal_default_instance());
  ::_Maneuver_default_instance_._instance.get_mutable()->end_ = const_cast< ::Point3d*>(
      ::Point3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Maneuver::kStartFieldNumber;
const int Maneuver::kEndFieldNumber;
const int Maneuver::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Maneuver::Maneuver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_Maneuver.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Maneuver)
}
Maneuver::Maneuver(const Maneuver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_start()) {
    start_ = new ::Point3d(*from.start_);
  } else {
    start_ = NULL;
  }
  if (from.has_end()) {
    end_ = new ::Point3d(*from.end_);
  } else {
    end_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:Maneuver)
}

void Maneuver::SharedCtor() {
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&start_)) + sizeof(type_));
}

Maneuver::~Maneuver() {
  // @@protoc_insertion_point(destructor:Maneuver)
  SharedDtor();
}

void Maneuver::SharedDtor() {
  if (this != internal_default_instance()) delete start_;
  if (this != internal_default_instance()) delete end_;
}

void Maneuver::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Maneuver::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Maneuver& Maneuver::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_Maneuver.base);
  return *internal_default_instance();
}


void Maneuver::Clear() {
// @@protoc_insertion_point(message_clear_start:Maneuver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && start_ != NULL) {
    delete start_;
  }
  start_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_ != NULL) {
    delete end_;
  }
  end_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Maneuver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Maneuver)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Point3d start = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Point3d end = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ManeuverType type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::ManeuverType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Maneuver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Maneuver)
  return false;
#undef DO_
}

void Maneuver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Maneuver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Point3d start = 1;
  if (this->has_start()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_start(), output);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_end(), output);
  }

  // .ManeuverType type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Maneuver)
}

::google::protobuf::uint8* Maneuver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Maneuver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Point3d start = 1;
  if (this->has_start()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_start(), deterministic, target);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_end(), deterministic, target);
  }

  // .ManeuverType type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Maneuver)
  return target;
}

size_t Maneuver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Maneuver)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Point3d start = 1;
  if (this->has_start()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *start_);
  }

  // .Point3d end = 2;
  if (this->has_end()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *end_);
  }

  // .ManeuverType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Maneuver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Maneuver)
  GOOGLE_DCHECK_NE(&from, this);
  const Maneuver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Maneuver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Maneuver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Maneuver)
    MergeFrom(*source);
  }
}

void Maneuver::MergeFrom(const Maneuver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Maneuver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start()) {
    mutable_start()->::Point3d::MergeFrom(from.start());
  }
  if (from.has_end()) {
    mutable_end()->::Point3d::MergeFrom(from.end());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Maneuver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Maneuver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maneuver::CopyFrom(const Maneuver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Maneuver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maneuver::IsInitialized() const {
  return true;
}

void Maneuver::Swap(Maneuver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Maneuver::InternalSwap(Maneuver* other) {
  using std::swap;
  swap(start_, other->start_);
  swap(end_, other->end_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Maneuver::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PathBoundary::InitAsDefaultInstance() {
  ::_PathBoundary_default_instance_._instance.get_mutable()->line_ = const_cast< ::Polyline*>(
      ::Polyline::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PathBoundary::kLineFieldNumber;
const int PathBoundary::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PathBoundary::PathBoundary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_PathBoundary.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PathBoundary)
}
PathBoundary::PathBoundary(const PathBoundary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attributes_(from.attributes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_line()) {
    line_ = new ::Polyline(*from.line_);
  } else {
    line_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PathBoundary)
}

void PathBoundary::SharedCtor() {
  line_ = NULL;
}

PathBoundary::~PathBoundary() {
  // @@protoc_insertion_point(destructor:PathBoundary)
  SharedDtor();
}

void PathBoundary::SharedDtor() {
  if (this != internal_default_instance()) delete line_;
}

void PathBoundary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PathBoundary::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PathBoundary& PathBoundary::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_PathBoundary.base);
  return *internal_default_instance();
}


void PathBoundary::Clear() {
// @@protoc_insertion_point(message_clear_start:PathBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  if (GetArenaNoVirtual() == NULL && line_ != NULL) {
    delete line_;
  }
  line_ = NULL;
  _internal_metadata_.Clear();
}

bool PathBoundary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PathBoundary)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Polyline line = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .BoundaryAttribute attributes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PathBoundary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PathBoundary)
  return false;
#undef DO_
}

void PathBoundary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PathBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Polyline line = 1;
  if (this->has_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_line(), output);
  }

  // repeated .BoundaryAttribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->attributes(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PathBoundary)
}

::google::protobuf::uint8* PathBoundary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PathBoundary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Polyline line = 1;
  if (this->has_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_line(), deterministic, target);
  }

  // repeated .BoundaryAttribute attributes = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PathBoundary)
  return target;
}

size_t PathBoundary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PathBoundary)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .BoundaryAttribute attributes = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // .Polyline line = 1;
  if (this->has_line()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *line_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathBoundary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PathBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  const PathBoundary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PathBoundary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PathBoundary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PathBoundary)
    MergeFrom(*source);
  }
}

void PathBoundary::MergeFrom(const PathBoundary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PathBoundary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  if (from.has_line()) {
    mutable_line()->::Polyline::MergeFrom(from.line());
  }
}

void PathBoundary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PathBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathBoundary::CopyFrom(const PathBoundary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PathBoundary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathBoundary::IsInitialized() const {
  return true;
}

void PathBoundary::Swap(PathBoundary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PathBoundary::InternalSwap(PathBoundary* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  swap(line_, other->line_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PathBoundary::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RoadExtent::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoadExtent::kLeftExtentFieldNumber;
const int RoadExtent::kRightExtentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoadExtent::RoadExtent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_RoadExtent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:RoadExtent)
}
RoadExtent::RoadExtent(const RoadExtent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      left_extent_(from.left_extent_),
      right_extent_(from.right_extent_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:RoadExtent)
}

void RoadExtent::SharedCtor() {
}

RoadExtent::~RoadExtent() {
  // @@protoc_insertion_point(destructor:RoadExtent)
  SharedDtor();
}

void RoadExtent::SharedDtor() {
}

void RoadExtent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RoadExtent::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoadExtent& RoadExtent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_RoadExtent.base);
  return *internal_default_instance();
}


void RoadExtent::Clear() {
// @@protoc_insertion_point(message_clear_start:RoadExtent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  left_extent_.Clear();
  right_extent_.Clear();
  _internal_metadata_.Clear();
}

bool RoadExtent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:RoadExtent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Polyline left_extent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_left_extent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Polyline right_extent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_right_extent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:RoadExtent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:RoadExtent)
  return false;
#undef DO_
}

void RoadExtent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:RoadExtent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Polyline left_extent = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->left_extent_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->left_extent(static_cast<int>(i)),
      output);
  }

  // repeated .Polyline right_extent = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->right_extent_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->right_extent(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:RoadExtent)
}

::google::protobuf::uint8* RoadExtent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:RoadExtent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Polyline left_extent = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->left_extent_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->left_extent(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Polyline right_extent = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->right_extent_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->right_extent(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RoadExtent)
  return target;
}

size_t RoadExtent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RoadExtent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .Polyline left_extent = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->left_extent_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->left_extent(static_cast<int>(i)));
    }
  }

  // repeated .Polyline right_extent = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->right_extent_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->right_extent(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RoadExtent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:RoadExtent)
  GOOGLE_DCHECK_NE(&from, this);
  const RoadExtent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoadExtent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:RoadExtent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:RoadExtent)
    MergeFrom(*source);
  }
}

void RoadExtent::MergeFrom(const RoadExtent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:RoadExtent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  left_extent_.MergeFrom(from.left_extent_);
  right_extent_.MergeFrom(from.right_extent_);
}

void RoadExtent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:RoadExtent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoadExtent::CopyFrom(const RoadExtent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RoadExtent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoadExtent::IsInitialized() const {
  return true;
}

void RoadExtent::Swap(RoadExtent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoadExtent::InternalSwap(RoadExtent* other) {
  using std::swap;
  CastToBase(&left_extent_)->InternalSwap(CastToBase(&other->left_extent_));
  CastToBase(&right_extent_)->InternalSwap(CastToBase(&other->right_extent_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RoadExtent::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PathWidth::InitAsDefaultInstance() {
  ::_PathWidth_default_instance_._instance.get_mutable()->reference_point_ = const_cast< ::Point3d*>(
      ::Point3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PathWidth::kReferencePointFieldNumber;
const int PathWidth::kLeftWidthFieldNumber;
const int PathWidth::kRightWidthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PathWidth::PathWidth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_PathWidth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:PathWidth)
}
PathWidth::PathWidth(const PathWidth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_reference_point()) {
    reference_point_ = new ::Point3d(*from.reference_point_);
  } else {
    reference_point_ = NULL;
  }
  ::memcpy(&left_width_, &from.left_width_,
    static_cast<size_t>(reinterpret_cast<char*>(&right_width_) -
    reinterpret_cast<char*>(&left_width_)) + sizeof(right_width_));
  // @@protoc_insertion_point(copy_constructor:PathWidth)
}

void PathWidth::SharedCtor() {
  ::memset(&reference_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_width_) -
      reinterpret_cast<char*>(&reference_point_)) + sizeof(right_width_));
}

PathWidth::~PathWidth() {
  // @@protoc_insertion_point(destructor:PathWidth)
  SharedDtor();
}

void PathWidth::SharedDtor() {
  if (this != internal_default_instance()) delete reference_point_;
}

void PathWidth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PathWidth::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PathWidth& PathWidth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_PathWidth.base);
  return *internal_default_instance();
}


void PathWidth::Clear() {
// @@protoc_insertion_point(message_clear_start:PathWidth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && reference_point_ != NULL) {
    delete reference_point_;
  }
  reference_point_ = NULL;
  ::memset(&left_width_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&right_width_) -
      reinterpret_cast<char*>(&left_width_)) + sizeof(right_width_));
  _internal_metadata_.Clear();
}

bool PathWidth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PathWidth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .Point3d reference_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double left_width = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &left_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double right_width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u /* 25 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &right_width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PathWidth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PathWidth)
  return false;
#undef DO_
}

void PathWidth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PathWidth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Point3d reference_point = 1;
  if (this->has_reference_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_reference_point(), output);
  }

  // double left_width = 2;
  if (this->left_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->left_width(), output);
  }

  // double right_width = 3;
  if (this->right_width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->right_width(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PathWidth)
}

::google::protobuf::uint8* PathWidth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PathWidth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Point3d reference_point = 1;
  if (this->has_reference_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_reference_point(), deterministic, target);
  }

  // double left_width = 2;
  if (this->left_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->left_width(), target);
  }

  // double right_width = 3;
  if (this->right_width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->right_width(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PathWidth)
  return target;
}

size_t PathWidth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PathWidth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .Point3d reference_point = 1;
  if (this->has_reference_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reference_point_);
  }

  // double left_width = 2;
  if (this->left_width() != 0) {
    total_size += 1 + 8;
  }

  // double right_width = 3;
  if (this->right_width() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathWidth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PathWidth)
  GOOGLE_DCHECK_NE(&from, this);
  const PathWidth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PathWidth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PathWidth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PathWidth)
    MergeFrom(*source);
  }
}

void PathWidth::MergeFrom(const PathWidth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PathWidth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_reference_point()) {
    mutable_reference_point()->::Point3d::MergeFrom(from.reference_point());
  }
  if (from.left_width() != 0) {
    set_left_width(from.left_width());
  }
  if (from.right_width() != 0) {
    set_right_width(from.right_width());
  }
}

void PathWidth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PathWidth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathWidth::CopyFrom(const PathWidth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PathWidth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathWidth::IsInitialized() const {
  return true;
}

void PathWidth::Swap(PathWidth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PathWidth::InternalSwap(PathWidth* other) {
  using std::swap;
  swap(reference_point_, other->reference_point_);
  swap(left_width_, other->left_width_);
  swap(right_width_, other->right_width_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PathWidth::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Path::InitAsDefaultInstance() {
  ::_Path_default_instance_._instance.get_mutable()->area_ = const_cast< ::Polygon3d*>(
      ::Polygon3d::internal_default_instance());
  ::_Path_default_instance_._instance.get_mutable()->reference_line_ = const_cast< ::Polyline*>(
      ::Polyline::internal_default_instance());
  ::_Path_default_instance_._instance.get_mutable()->left_boundary_ = const_cast< ::PathBoundary*>(
      ::PathBoundary::internal_default_instance());
  ::_Path_default_instance_._instance.get_mutable()->right_boundary_ = const_cast< ::PathBoundary*>(
      ::PathBoundary::internal_default_instance());
  ::_Path_default_instance_._instance.get_mutable()->road_extent_ = const_cast< ::RoadExtent*>(
      ::RoadExtent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Path::kIdFieldNumber;
const int Path::kTypeFieldNumber;
const int Path::kAreaFieldNumber;
const int Path::kReferenceLineFieldNumber;
const int Path::kNextPathsFieldNumber;
const int Path::kPreviousPathsFieldNumber;
const int Path::kTagsFieldNumber;
const int Path::kSpeedLimitsFieldNumber;
const int Path::kLeftBoundaryFieldNumber;
const int Path::kRightBoundaryFieldNumber;
const int Path::kAdjacenciesFieldNumber;
const int Path::kRoadExtentFieldNumber;
const int Path::kPathWidthsFieldNumber;
const int Path::kManeuversFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Path::Path()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_Path.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Path)
}
Path::Path(const Path& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      next_paths_(from.next_paths_),
      previous_paths_(from.previous_paths_),
      tags_(from.tags_),
      speed_limits_(from.speed_limits_),
      adjacencies_(from.adjacencies_),
      path_widths_(from.path_widths_),
      maneuvers_(from.maneuvers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_area()) {
    area_ = new ::Polygon3d(*from.area_);
  } else {
    area_ = NULL;
  }
  if (from.has_reference_line()) {
    reference_line_ = new ::Polyline(*from.reference_line_);
  } else {
    reference_line_ = NULL;
  }
  if (from.has_left_boundary()) {
    left_boundary_ = new ::PathBoundary(*from.left_boundary_);
  } else {
    left_boundary_ = NULL;
  }
  if (from.has_right_boundary()) {
    right_boundary_ = new ::PathBoundary(*from.right_boundary_);
  } else {
    right_boundary_ = NULL;
  }
  if (from.has_road_extent()) {
    road_extent_ = new ::RoadExtent(*from.road_extent_);
  } else {
    road_extent_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:Path)
}

void Path::SharedCtor() {
  ::memset(&area_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&area_)) + sizeof(type_));
}

Path::~Path() {
  // @@protoc_insertion_point(destructor:Path)
  SharedDtor();
}

void Path::SharedDtor() {
  if (this != internal_default_instance()) delete area_;
  if (this != internal_default_instance()) delete reference_line_;
  if (this != internal_default_instance()) delete left_boundary_;
  if (this != internal_default_instance()) delete right_boundary_;
  if (this != internal_default_instance()) delete road_extent_;
}

void Path::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Path::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Path& Path::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_Path.base);
  return *internal_default_instance();
}


void Path::Clear() {
// @@protoc_insertion_point(message_clear_start:Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  next_paths_.Clear();
  previous_paths_.Clear();
  tags_.Clear();
  speed_limits_.Clear();
  adjacencies_.Clear();
  path_widths_.Clear();
  maneuvers_.Clear();
  if (GetArenaNoVirtual() == NULL && area_ != NULL) {
    delete area_;
  }
  area_ = NULL;
  if (GetArenaNoVirtual() == NULL && reference_line_ != NULL) {
    delete reference_line_;
  }
  reference_line_ = NULL;
  if (GetArenaNoVirtual() == NULL && left_boundary_ != NULL) {
    delete left_boundary_;
  }
  left_boundary_ = NULL;
  if (GetArenaNoVirtual() == NULL && right_boundary_ != NULL) {
    delete right_boundary_;
  }
  right_boundary_ = NULL;
  if (GetArenaNoVirtual() == NULL && road_extent_ != NULL) {
    delete road_extent_;
  }
  road_extent_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Path::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Path)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PathType type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::PathType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Polygon3d area = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Polyline reference_line = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reference_line()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 next_paths = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_next_paths())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42u, input, this->mutable_next_paths())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 previous_paths = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_previous_paths())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 50u, input, this->mutable_previous_paths())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PathTag tags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .SpeedLimit speed_limits = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_speed_limits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PathBoundary left_boundary = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_left_boundary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PathBoundary right_boundary = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_right_boundary()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Adjacency adjacencies = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_adjacencies()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .RoadExtent road_extent = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_road_extent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PathWidth path_widths = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_path_widths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Maneuver maneuvers = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_maneuvers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Path)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Path)
  return false;
#undef DO_
}

void Path::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // .PathType type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .Polygon3d area = 3;
  if (this->has_area()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_area(), output);
  }

  // .Polyline reference_line = 4;
  if (this->has_reference_line()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_reference_line(), output);
  }

  // repeated int32 next_paths = 5;
  if (this->next_paths_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _next_paths_cached_byte_size_));
  }
  for (int i = 0, n = this->next_paths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->next_paths(i), output);
  }

  // repeated int32 previous_paths = 6;
  if (this->previous_paths_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(6, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _previous_paths_cached_byte_size_));
  }
  for (int i = 0, n = this->previous_paths_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->previous_paths(i), output);
  }

  // repeated .PathTag tags = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->tags(static_cast<int>(i)),
      output);
  }

  // repeated .SpeedLimit speed_limits = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_limits_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->speed_limits(static_cast<int>(i)),
      output);
  }

  // .PathBoundary left_boundary = 9;
  if (this->has_left_boundary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_left_boundary(), output);
  }

  // .PathBoundary right_boundary = 10;
  if (this->has_right_boundary()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_right_boundary(), output);
  }

  // repeated .Adjacency adjacencies = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->adjacencies_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->adjacencies(static_cast<int>(i)),
      output);
  }

  // .RoadExtent road_extent = 12;
  if (this->has_road_extent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_road_extent(), output);
  }

  // repeated .PathWidth path_widths = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_widths_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->path_widths(static_cast<int>(i)),
      output);
  }

  // repeated .Maneuver maneuvers = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->maneuvers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->maneuvers(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Path)
}

::google::protobuf::uint8* Path::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Path)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // .PathType type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .Polygon3d area = 3;
  if (this->has_area()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_area(), deterministic, target);
  }

  // .Polyline reference_line = 4;
  if (this->has_reference_line()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_reference_line(), deterministic, target);
  }

  // repeated int32 next_paths = 5;
  if (this->next_paths_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _next_paths_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->next_paths_, target);
  }

  // repeated int32 previous_paths = 6;
  if (this->previous_paths_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _previous_paths_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->previous_paths_, target);
  }

  // repeated .PathTag tags = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->tags_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->tags(static_cast<int>(i)), deterministic, target);
  }

  // repeated .SpeedLimit speed_limits = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->speed_limits_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->speed_limits(static_cast<int>(i)), deterministic, target);
  }

  // .PathBoundary left_boundary = 9;
  if (this->has_left_boundary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_left_boundary(), deterministic, target);
  }

  // .PathBoundary right_boundary = 10;
  if (this->has_right_boundary()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_right_boundary(), deterministic, target);
  }

  // repeated .Adjacency adjacencies = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->adjacencies_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->adjacencies(static_cast<int>(i)), deterministic, target);
  }

  // .RoadExtent road_extent = 12;
  if (this->has_road_extent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_road_extent(), deterministic, target);
  }

  // repeated .PathWidth path_widths = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_widths_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->path_widths(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Maneuver maneuvers = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->maneuvers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->maneuvers(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Path)
  return target;
}

size_t Path::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Path)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 next_paths = 5;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->next_paths_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _next_paths_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 previous_paths = 6;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->previous_paths_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _previous_paths_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .PathTag tags = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->tags_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->tags(static_cast<int>(i)));
    }
  }

  // repeated .SpeedLimit speed_limits = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->speed_limits_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->speed_limits(static_cast<int>(i)));
    }
  }

  // repeated .Adjacency adjacencies = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->adjacencies_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->adjacencies(static_cast<int>(i)));
    }
  }

  // repeated .PathWidth path_widths = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->path_widths_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->path_widths(static_cast<int>(i)));
    }
  }

  // repeated .Maneuver maneuvers = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->maneuvers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->maneuvers(static_cast<int>(i)));
    }
  }

  // .Polygon3d area = 3;
  if (this->has_area()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *area_);
  }

  // .Polyline reference_line = 4;
  if (this->has_reference_line()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reference_line_);
  }

  // .PathBoundary left_boundary = 9;
  if (this->has_left_boundary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *left_boundary_);
  }

  // .PathBoundary right_boundary = 10;
  if (this->has_right_boundary()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *right_boundary_);
  }

  // .RoadExtent road_extent = 12;
  if (this->has_road_extent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *road_extent_);
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // .PathType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Path::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Path)
  GOOGLE_DCHECK_NE(&from, this);
  const Path* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Path>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Path)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Path)
    MergeFrom(*source);
  }
}

void Path::MergeFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Path)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  next_paths_.MergeFrom(from.next_paths_);
  previous_paths_.MergeFrom(from.previous_paths_);
  tags_.MergeFrom(from.tags_);
  speed_limits_.MergeFrom(from.speed_limits_);
  adjacencies_.MergeFrom(from.adjacencies_);
  path_widths_.MergeFrom(from.path_widths_);
  maneuvers_.MergeFrom(from.maneuvers_);
  if (from.has_area()) {
    mutable_area()->::Polygon3d::MergeFrom(from.area());
  }
  if (from.has_reference_line()) {
    mutable_reference_line()->::Polyline::MergeFrom(from.reference_line());
  }
  if (from.has_left_boundary()) {
    mutable_left_boundary()->::PathBoundary::MergeFrom(from.left_boundary());
  }
  if (from.has_right_boundary()) {
    mutable_right_boundary()->::PathBoundary::MergeFrom(from.right_boundary());
  }
  if (from.has_road_extent()) {
    mutable_road_extent()->::RoadExtent::MergeFrom(from.road_extent());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Path::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Path::CopyFrom(const Path& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Path)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Path::IsInitialized() const {
  return true;
}

void Path::Swap(Path* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Path::InternalSwap(Path* other) {
  using std::swap;
  next_paths_.InternalSwap(&other->next_paths_);
  previous_paths_.InternalSwap(&other->previous_paths_);
  CastToBase(&tags_)->InternalSwap(CastToBase(&other->tags_));
  CastToBase(&speed_limits_)->InternalSwap(CastToBase(&other->speed_limits_));
  CastToBase(&adjacencies_)->InternalSwap(CastToBase(&other->adjacencies_));
  CastToBase(&path_widths_)->InternalSwap(CastToBase(&other->path_widths_));
  CastToBase(&maneuvers_)->InternalSwap(CastToBase(&other->maneuvers_));
  swap(area_, other->area_);
  swap(reference_line_, other->reference_line_);
  swap(left_boundary_, other->left_boundary_);
  swap(right_boundary_, other->right_boundary_);
  swap(road_extent_, other->road_extent_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Path::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Junction::InitAsDefaultInstance() {
  ::_Junction_default_instance_._instance.get_mutable()->area_ = const_cast< ::Polygon3d*>(
      ::Polygon3d::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Junction::kIdFieldNumber;
const int Junction::kPathIdsFieldNumber;
const int Junction::kAreaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Junction::Junction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_Junction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Junction)
}
Junction::Junction(const Junction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_ids_(from.path_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_area()) {
    area_ = new ::Polygon3d(*from.area_);
  } else {
    area_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:Junction)
}

void Junction::SharedCtor() {
  ::memset(&area_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&area_)) + sizeof(id_));
}

Junction::~Junction() {
  // @@protoc_insertion_point(destructor:Junction)
  SharedDtor();
}

void Junction::SharedDtor() {
  if (this != internal_default_instance()) delete area_;
}

void Junction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Junction::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Junction& Junction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_Junction.base);
  return *internal_default_instance();
}


void Junction::Clear() {
// @@protoc_insertion_point(message_clear_start:Junction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_ids_.Clear();
  if (GetArenaNoVirtual() == NULL && area_ != NULL) {
    delete area_;
  }
  area_ = NULL;
  id_ = 0;
  _internal_metadata_.Clear();
}

bool Junction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Junction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 path_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_path_ids())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_path_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Polygon3d area = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_area()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Junction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Junction)
  return false;
#undef DO_
}

void Junction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Junction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // repeated int32 path_ids = 2;
  if (this->path_ids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _path_ids_cached_byte_size_));
  }
  for (int i = 0, n = this->path_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->path_ids(i), output);
  }

  // .Polygon3d area = 3;
  if (this->has_area()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_area(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Junction)
}

::google::protobuf::uint8* Junction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Junction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // repeated int32 path_ids = 2;
  if (this->path_ids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _path_ids_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->path_ids_, target);
  }

  // .Polygon3d area = 3;
  if (this->has_area()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_area(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Junction)
  return target;
}

size_t Junction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Junction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 path_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->path_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _path_ids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .Polygon3d area = 3;
  if (this->has_area()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *area_);
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Junction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Junction)
  GOOGLE_DCHECK_NE(&from, this);
  const Junction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Junction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Junction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Junction)
    MergeFrom(*source);
  }
}

void Junction::MergeFrom(const Junction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Junction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_ids_.MergeFrom(from.path_ids_);
  if (from.has_area()) {
    mutable_area()->::Polygon3d::MergeFrom(from.area());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Junction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Junction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Junction::CopyFrom(const Junction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Junction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Junction::IsInitialized() const {
  return true;
}

void Junction::Swap(Junction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Junction::InternalSwap(Junction* other) {
  using std::swap;
  path_ids_.InternalSwap(&other->path_ids_);
  swap(area_, other->area_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Junction::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Map_PathsEntry_DoNotUse::Map_PathsEntry_DoNotUse() {}
Map_PathsEntry_DoNotUse::Map_PathsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Map_PathsEntry_DoNotUse::MergeFrom(const Map_PathsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Map_PathsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[14];
}
void Map_PathsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Map_OverlapsEntry_DoNotUse::Map_OverlapsEntry_DoNotUse() {}
Map_OverlapsEntry_DoNotUse::Map_OverlapsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Map_OverlapsEntry_DoNotUse::MergeFrom(const Map_OverlapsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Map_OverlapsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[15];
}
void Map_OverlapsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

Map_JunctionsEntry_DoNotUse::Map_JunctionsEntry_DoNotUse() {}
Map_JunctionsEntry_DoNotUse::Map_JunctionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Map_JunctionsEntry_DoNotUse::MergeFrom(const Map_JunctionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Map_JunctionsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[16];
}
void Map_JunctionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Map::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Map::kPathsFieldNumber;
const int Map::kOverlapsFieldNumber;
const int Map::kJunctionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Map::Map()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_voyage_5fmap_2eproto::scc_info_Map.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Map)
}
Map::Map(const Map& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  paths_.MergeFrom(from.paths_);
  overlaps_.MergeFrom(from.overlaps_);
  junctions_.MergeFrom(from.junctions_);
  // @@protoc_insertion_point(copy_constructor:Map)
}

void Map::SharedCtor() {
}

Map::~Map() {
  // @@protoc_insertion_point(destructor:Map)
  SharedDtor();
}

void Map::SharedDtor() {
}

void Map::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Map::descriptor() {
  ::protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Map& Map::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_voyage_5fmap_2eproto::scc_info_Map.base);
  return *internal_default_instance();
}


void Map::Clear() {
// @@protoc_insertion_point(message_clear_start:Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  paths_.Clear();
  overlaps_.Clear();
  junctions_.Clear();
  _internal_metadata_.Clear();
}

bool Map::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Map)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<int32, .Path> paths = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          Map_PathsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Map_PathsEntry_DoNotUse,
              ::google::protobuf::int32, ::Path,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::Path > > parser(&paths_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .Overlap> overlaps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          Map_OverlapsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Map_OverlapsEntry_DoNotUse,
              ::google::protobuf::int32, ::Overlap,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::Overlap > > parser(&overlaps_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, .Junction> junctions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          Map_JunctionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Map_JunctionsEntry_DoNotUse,
              ::google::protobuf::int32, ::Junction,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::Junction > > parser(&junctions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Map)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Map)
  return false;
#undef DO_
}

void Map::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .Path> paths = 1;
  if (!this->paths().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Path >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->paths().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->paths().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Path >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Path >::const_iterator
          it = this->paths().begin();
          it != this->paths().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Map_PathsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(paths_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    } else {
      ::std::unique_ptr<Map_PathsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Path >::const_iterator
          it = this->paths().begin();
          it != this->paths().end(); ++it) {
        entry.reset(paths_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
      }
    }
  }

  // map<int32, .Overlap> overlaps = 2;
  if (!this->overlaps().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Overlap >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->overlaps().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->overlaps().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Overlap >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Overlap >::const_iterator
          it = this->overlaps().begin();
          it != this->overlaps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Map_OverlapsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(overlaps_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    } else {
      ::std::unique_ptr<Map_OverlapsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Overlap >::const_iterator
          it = this->overlaps().begin();
          it != this->overlaps().end(); ++it) {
        entry.reset(overlaps_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
      }
    }
  }

  // map<int32, .Junction> junctions = 3;
  if (!this->junctions().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Junction >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->junctions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->junctions().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Junction >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Junction >::const_iterator
          it = this->junctions().begin();
          it != this->junctions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Map_JunctionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(junctions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    } else {
      ::std::unique_ptr<Map_JunctionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Junction >::const_iterator
          it = this->junctions().begin();
          it != this->junctions().end(); ++it) {
        entry.reset(junctions_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Map)
}

::google::protobuf::uint8* Map::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Map)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<int32, .Path> paths = 1;
  if (!this->paths().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Path >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->paths().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->paths().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Path >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Path >::const_iterator
          it = this->paths().begin();
          it != this->paths().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Map_PathsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(paths_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<Map_PathsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Path >::const_iterator
          it = this->paths().begin();
          it != this->paths().end(); ++it) {
        entry.reset(paths_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
      }
    }
  }

  // map<int32, .Overlap> overlaps = 2;
  if (!this->overlaps().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Overlap >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->overlaps().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->overlaps().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Overlap >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Overlap >::const_iterator
          it = this->overlaps().begin();
          it != this->overlaps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Map_OverlapsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(overlaps_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<Map_OverlapsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Overlap >::const_iterator
          it = this->overlaps().begin();
          it != this->overlaps().end(); ++it) {
        entry.reset(overlaps_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
      }
    }
  }

  // map<int32, .Junction> junctions = 3;
  if (!this->junctions().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Junction >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->junctions().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->junctions().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::Junction >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Junction >::const_iterator
          it = this->junctions().begin();
          it != this->junctions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Map_JunctionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(junctions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    } else {
      ::std::unique_ptr<Map_JunctionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::Junction >::const_iterator
          it = this->junctions().begin();
          it != this->junctions().end(); ++it) {
        entry.reset(junctions_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Map)
  return target;
}

size_t Map::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Map)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, .Path> paths = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->paths_size());
  {
    ::std::unique_ptr<Map_PathsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::Path >::const_iterator
        it = this->paths().begin();
        it != this->paths().end(); ++it) {
      entry.reset(paths_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<int32, .Overlap> overlaps = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->overlaps_size());
  {
    ::std::unique_ptr<Map_OverlapsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::Overlap >::const_iterator
        it = this->overlaps().begin();
        it != this->overlaps().end(); ++it) {
      entry.reset(overlaps_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<int32, .Junction> junctions = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->junctions_size());
  {
    ::std::unique_ptr<Map_JunctionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::Junction >::const_iterator
        it = this->junctions().begin();
        it != this->junctions().end(); ++it) {
      entry.reset(junctions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Map::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Map)
  GOOGLE_DCHECK_NE(&from, this);
  const Map* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Map>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Map)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Map)
    MergeFrom(*source);
  }
}

void Map::MergeFrom(const Map& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Map)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  paths_.MergeFrom(from.paths_);
  overlaps_.MergeFrom(from.overlaps_);
  junctions_.MergeFrom(from.junctions_);
}

void Map::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Map::CopyFrom(const Map& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Map)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Map::IsInitialized() const {
  return true;
}

void Map::Swap(Map* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Map::InternalSwap(Map* other) {
  using std::swap;
  paths_.Swap(&other->paths_);
  overlaps_.Swap(&other->overlaps_);
  junctions_.Swap(&other->junctions_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Map::GetMetadata() const {
  protobuf_voyage_5fmap_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_voyage_5fmap_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Point3d* Arena::CreateMaybeMessage< ::Point3d >(Arena* arena) {
  return Arena::CreateInternal< ::Point3d >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Polygon3d* Arena::CreateMaybeMessage< ::Polygon3d >(Arena* arena) {
  return Arena::CreateInternal< ::Polygon3d >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Polyline* Arena::CreateMaybeMessage< ::Polyline >(Arena* arena) {
  return Arena::CreateInternal< ::Polyline >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Overlap* Arena::CreateMaybeMessage< ::Overlap >(Arena* arena) {
  return Arena::CreateInternal< ::Overlap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Adjacency* Arena::CreateMaybeMessage< ::Adjacency >(Arena* arena) {
  return Arena::CreateInternal< ::Adjacency >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::BoundaryAttribute* Arena::CreateMaybeMessage< ::BoundaryAttribute >(Arena* arena) {
  return Arena::CreateInternal< ::BoundaryAttribute >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PathTag* Arena::CreateMaybeMessage< ::PathTag >(Arena* arena) {
  return Arena::CreateInternal< ::PathTag >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::SpeedLimit* Arena::CreateMaybeMessage< ::SpeedLimit >(Arena* arena) {
  return Arena::CreateInternal< ::SpeedLimit >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Maneuver* Arena::CreateMaybeMessage< ::Maneuver >(Arena* arena) {
  return Arena::CreateInternal< ::Maneuver >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PathBoundary* Arena::CreateMaybeMessage< ::PathBoundary >(Arena* arena) {
  return Arena::CreateInternal< ::PathBoundary >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::RoadExtent* Arena::CreateMaybeMessage< ::RoadExtent >(Arena* arena) {
  return Arena::CreateInternal< ::RoadExtent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::PathWidth* Arena::CreateMaybeMessage< ::PathWidth >(Arena* arena) {
  return Arena::CreateInternal< ::PathWidth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Path* Arena::CreateMaybeMessage< ::Path >(Arena* arena) {
  return Arena::CreateInternal< ::Path >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Junction* Arena::CreateMaybeMessage< ::Junction >(Arena* arena) {
  return Arena::CreateInternal< ::Junction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Map_PathsEntry_DoNotUse* Arena::CreateMaybeMessage< ::Map_PathsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Map_PathsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Map_OverlapsEntry_DoNotUse* Arena::CreateMaybeMessage< ::Map_OverlapsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Map_OverlapsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Map_JunctionsEntry_DoNotUse* Arena::CreateMaybeMessage< ::Map_JunctionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Map_JunctionsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Map* Arena::CreateMaybeMessage< ::Map >(Arena* arena) {
  return Arena::CreateInternal< ::Map >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
